[MAIN]
# Use multiple processes to speed up Pylint
jobs=1

# Pickle collected data for later comparisons
persistent=yes

[MESSAGES CONTROL]
# Disable the following checks that are either false positives or design decisions:
disable=
    # Import-related (intentional for avoiding circular imports)
    import-outside-toplevel,  # C0415
    wrong-import-order,  # C0411 (sometimes necessary for avoiding circular imports)
    
    # Exception handling (intentional for robustness)
    broad-exception-caught,  # W0718
    
    # Naming (sometimes necessary for compatibility)
    redefined-outer-name,  # W0621
    
    # Complexity (would require major refactoring)
    too-many-arguments,  # R0913
    too-many-positional-arguments,  # R0917
    too-many-locals,  # R0914
    too-many-branches,  # R0912
    too-many-statements,  # R0915
    too-many-return-statements,  # R0911
    too-few-public-methods,  # R0903
    too-many-instance-attributes,  # R0902
    too-many-nested-blocks,  # R1702
    
    # Code duplication (some intentional for clarity)
    duplicate-code,  # R0801
    
    # Global statements (necessary for state management)
    global-statement,  # W0603
    
    # Unused arguments (often required by interface/callbacks)
    unused-argument,  # W0613
    
    # Module/class attributes (design decisions)
    attribute-defined-outside-init,  # W0201
    protected-access,  # W0212
    
    # Import issues that are false positives
    reimported,  # W0404
    unused-import,  # W0611
    cyclic-import,  # R0401
    
    # Code style
    logging-fstring-interpolation,  # W1203 (would require extensive refactoring)
    no-else-return,  # R1705 (sometimes more readable with else)
    unused-variable,  # W0612 (some variables kept for debugging)
    unnecessary-pass,  # W0107 (needed for abstract methods)
    
    # Other
    consider-using-f-string,  # C0209 (conflicts with logging best practices)
    unspecified-encoding,  # W1514 (Python 3.10+)
    consider-using-assignment-expr,  # C2801 (walrus operator not needed)
    missing-function-docstring,  # C0116 (would require extensive documentation)
    missing-module-docstring,  # C0114 (would require extensive documentation)
    line-too-long,  # C0301 (some lines are necessarily long)

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Maximum number of lines in a module
max-module-lines=1500

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,db,e,f,

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__)|(_[a-z0-9_]+))$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct variable names  
variable-rgx=[a-z_][a-z0-9_]{0,30}$

[DESIGN]
# Maximum number of arguments for function / method
max-args=10

# Maximum number of locals for function / method body
max-locals=25

# Maximum number of return / yield for function / method body
max-returns=10

# Maximum number of branch for function / method body
max-branches=20

# Maximum number of statements in function / method body
max-statements=75

[TYPECHECK]
# List of members which are set dynamically and missed by pylint inference
generated-members=scrape_url,get_transcript,response

# Ignore no-member errors for config module (dynamic configuration)
ignored-modules=config

# Ignore specific classes
ignored-classes=config,Firecrawl,YouTubeTranscriptApi,Exception

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=10

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities  
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

[LOGGING]
# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging,logging_config

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO
